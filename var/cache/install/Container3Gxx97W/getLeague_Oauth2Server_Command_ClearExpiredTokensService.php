<?php

namespace Container3Gxx97W;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLeague_Oauth2Server_Command_ClearExpiredTokensService extends Eccube_KernelInstallContainer
{
    /*
     * Gets the private 'league.oauth2_server.command.clear_expired_tokens' shared service.
     *
     * @return \League\Bundle\OAuth2ServerBundle\Command\ClearExpiredTokensCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'console'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'Command.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'ClearExpiredTokensCommand.php';

        $container->privates['league.oauth2_server.command.clear_expired_tokens'] = $instance = new \League\Bundle\OAuth2ServerBundle\Command\ClearExpiredTokensCommand(($container->privates['league.oauth2_server.manager.doctrine.access_token'] ?? $container->load('getLeague_Oauth2Server_Manager_Doctrine_AccessTokenService')), ($container->privates['league.oauth2_server.manager.doctrine.refresh_token'] ?? $container->load('getLeague_Oauth2Server_Manager_Doctrine_RefreshTokenService')), ($container->privates['league.oauth2_server.manager.doctrine.authorization_code'] ?? $container->load('getLeague_Oauth2Server_Manager_Doctrine_AuthorizationCodeService')));

        $instance->setName('league:oauth2-server:clear-expired-tokens');
        $instance->setDescription('Clears all expired access and/or refresh tokens and/or auth codes');

        return $instance;
    }
}
