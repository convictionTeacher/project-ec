<?php

namespace Container3Gxx97W;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getEccube_Purchase_Flow_ShoppingService extends Eccube_KernelInstallContainer
{
    /*
     * Gets the private 'eccube.purchase.flow.shopping' shared service.
     *
     * @return \Eccube\Service\PurchaseFlow\PurchaseFlow
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'PurchaseFlow.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'ItemHolderPreprocessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'OrderNoProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'DeliveryFeePreprocessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'DeliveryFeeFreeByShippingPreprocessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'PaymentChargePreprocessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'TaxProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'ValidatorTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'ItemHolderValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'StockMultipleValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'SaleLimitMultipleValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'ItemHolderPostValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'PointRateProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'PaymentChargeChangeValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'DeliveryFeeChangeValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'TaxRateChangeValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'PurchaseProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'PreOrderIdValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'DiscountProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'PointProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'AbstractPurchaseProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'StockReduceProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'CustomerPurchaseInfoProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'OrderUpdateProcessor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'ItemValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'ProductStatusValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'PriceChangeValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'ClassCategoryValidator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'PurchaseFlow'.\DIRECTORY_SEPARATOR.'Processor'.\DIRECTORY_SEPARATOR.'PaymentTotalNegativeValidator.php';

        $container->privates['eccube.purchase.flow.shopping'] = $instance = new \Eccube\Service\PurchaseFlow\PurchaseFlow();

        $a = ($container->privates['Eccube\\Repository\\BaseInfoRepository'] ?? self::getBaseInfoRepositoryService($container));
        $b = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));
        $c = ($container->privates['Eccube\\Repository\\TaxRuleRepository'] ?? self::getTaxRuleRepositoryService($container));
        $d = ($container->privates['Eccube\\Repository\\ProductClassRepository'] ?? self::getProductClassRepositoryService($container));

        $instance->setFlowType('shopping');
        $instance->addItemValidator(($container->privates['eccube.purchase.flow.item.validator.delivery.setting.validator'] ?? $container->load('getEccube_Purchase_Flow_Item_Validator_Delivery_Setting_ValidatorService')));
        $instance->addItemValidator(($container->privates['eccube.purchase.flow.item.validator.product.status.validator'] ??= new \Eccube\Service\PurchaseFlow\Processor\ProductStatusValidator()));
        $instance->addItemValidator(($container->privates['eccube.purchase.flow.item.validator.price.change.validator'] ??= new \Eccube\Service\PurchaseFlow\Processor\PriceChangeValidator()));
        $instance->addItemValidator(($container->privates['eccube.purchase.flow.item.validator.class_category.validator'] ??= new \Eccube\Service\PurchaseFlow\Processor\ClassCategoryValidator()));
        $instance->addItemHolderPreprocessor(($container->privates['eccube.purchase.flow.item.holder.preprocessor.tax.processor.before'] ?? $container->load('getEccube_Purchase_Flow_Item_Holder_Preprocessor_Tax_Processor_BeforeService')));
        $instance->addItemHolderPreprocessor(new \Eccube\Service\PurchaseFlow\Processor\OrderNoProcessor(($container->services['Eccube\\Common\\EccubeConfig'] ?? self::getEccubeConfigService($container)), ($container->privates['Eccube\\Repository\\OrderRepository'] ?? self::getOrderRepositoryService($container))));
        $instance->addItemHolderPreprocessor(new \Eccube\Service\PurchaseFlow\Processor\DeliveryFeePreprocessor($a, $b, $c, ($container->privates['Eccube\\Repository\\DeliveryFeeRepository'] ?? $container->load('getDeliveryFeeRepositoryService'))));
        $instance->addItemHolderPreprocessor(new \Eccube\Service\PurchaseFlow\Processor\DeliveryFeeFreeByShippingPreprocessor($a));
        $instance->addItemHolderPreprocessor(new \Eccube\Service\PurchaseFlow\Processor\PaymentChargePreprocessor(($container->privates['Eccube\\Repository\\Master\\OrderItemTypeRepository'] ?? $container->load('getOrderItemTypeRepositoryService')), ($container->privates['Eccube\\Repository\\Master\\TaxDisplayTypeRepository'] ?? $container->load('getTaxDisplayTypeRepositoryService')), ($container->privates['Eccube\\Repository\\Master\\TaxTypeRepository'] ?? $container->load('getTaxTypeRepositoryService'))));
        $instance->addItemHolderPreprocessor(new \Eccube\Service\PurchaseFlow\Processor\TaxProcessor($b, $c, ($container->services['Eccube\\Service\\TaxRuleService'] ?? $container->load('getTaxRuleServiceService')), ($container->privates['Eccube\\Service\\OrderHelper'] ?? $container->load('getOrderHelperService'))));
        $instance->addItemHolderValidator(new \Eccube\Service\PurchaseFlow\Processor\StockMultipleValidator($d));
        $instance->addItemHolderValidator(($container->privates['eccube.purchase.flow.item.holder.validator.empty.items.validator'] ?? $container->load('getEccube_Purchase_Flow_Item_Holder_Validator_Empty_Items_ValidatorService')));
        $instance->addItemHolderValidator(new \Eccube\Service\PurchaseFlow\Processor\SaleLimitMultipleValidator($d));
        $instance->addItemHolderPostValidator(new \Eccube\Service\PurchaseFlow\Processor\PointRateProcessor($a));
        $instance->addItemHolderPostValidator(($container->privates['eccube.purchase.flow.item.holder.post.validator.payment.validator'] ?? $container->load('getEccube_Purchase_Flow_Item_Holder_Post_Validator_Payment_ValidatorService')));
        $instance->addItemHolderPostValidator(($container->privates['eccube.purchase.flow.item.holder.post.validator.add.point.validator'] ?? $container->load('getEccube_Purchase_Flow_Item_Holder_Post_Validator_Add_Point_ValidatorService')));
        $instance->addItemHolderPostValidator(($container->privates['eccube.purchase.flow.item.holder.post.validator.payment.total.limit.validator'] ?? $container->load('getEccube_Purchase_Flow_Item_Holder_Post_Validator_Payment_Total_Limit_ValidatorService')));
        $instance->addItemHolderPostValidator(($container->privates['eccube.purchase.flow.item.holder.post.validator.total.negative.validator'] ??= new \Eccube\Service\PurchaseFlow\Processor\PaymentTotalNegativeValidator()));
        $instance->addItemHolderPostValidator(new \Eccube\Service\PurchaseFlow\Processor\PaymentChargeChangeValidator());
        $instance->addItemHolderPostValidator(new \Eccube\Service\PurchaseFlow\Processor\DeliveryFeeChangeValidator());
        $instance->addItemHolderPostValidator(new \Eccube\Service\PurchaseFlow\Processor\TaxRateChangeValidator());
        $instance->addDiscountProcessor(($container->privates['eccube.purchase.flow.discount.processor.point.processor'] ?? $container->load('getEccube_Purchase_Flow_Discount_Processor_Point_ProcessorService')));
        $instance->addPurchaseProcessor(new \Eccube\Service\PurchaseFlow\Processor\PreOrderIdValidator(($container->privates['Eccube\\Service\\CartService'] ?? self::getCartServiceService($container))));
        $instance->addPurchaseProcessor(new \Eccube\Service\PurchaseFlow\Processor\PointProcessor($b, ($container->privates['Eccube\\Service\\PointHelper'] ?? $container->load('getPointHelperService'))));
        $instance->addPurchaseProcessor(new \Eccube\Service\PurchaseFlow\Processor\StockReduceProcessor(($container->privates['Eccube\\Repository\\ProductStockRepository'] ?? $container->load('getProductStockRepositoryService')), $b));
        $instance->addPurchaseProcessor(new \Eccube\Service\PurchaseFlow\Processor\CustomerPurchaseInfoProcessor());
        $instance->addPurchaseProcessor(new \Eccube\Service\PurchaseFlow\Processor\OrderUpdateProcessor(($container->privates['Eccube\\Repository\\Master\\OrderStatusRepository'] ?? $container->load('getOrderStatusRepositoryService'))));

        return $instance;
    }
}
