<?php

namespace Container3Gxx97W;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLeague_Oauth2Server_AuthorizationServerService extends Eccube_KernelInstallContainer
{
    /*
     * Gets the private 'league.oauth2_server.authorization_server' shared service.
     *
     * @return \League\OAuth2\Server\AuthorizationServer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'event'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EmitterAwareInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'event'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EmitterAwareTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'AuthorizationServer.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repositories'.\DIRECTORY_SEPARATOR.'RepositoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repositories'.\DIRECTORY_SEPARATOR.'ClientRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repository'.\DIRECTORY_SEPARATOR.'ClientRepository.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repositories'.\DIRECTORY_SEPARATOR.'ScopeRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repository'.\DIRECTORY_SEPARATOR.'ScopeRepository.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Manager'.\DIRECTORY_SEPARATOR.'ScopeManagerInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Manager'.\DIRECTORY_SEPARATOR.'InMemory'.\DIRECTORY_SEPARATOR.'ScopeManager.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ValueObject'.\DIRECTORY_SEPARATOR.'Scope.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'CryptKey.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'event'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ListenerAcceptorInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'event'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EmitterInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'event'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Emitter.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'event'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'ListenerProviderInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'SymfonyLeagueEventListenerProvider.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Grant'.\DIRECTORY_SEPARATOR.'GrantTypeInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'CryptTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Grant'.\DIRECTORY_SEPARATOR.'AbstractGrant.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Grant'.\DIRECTORY_SEPARATOR.'RefreshTokenGrant.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repositories'.\DIRECTORY_SEPARATOR.'RefreshTokenRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repository'.\DIRECTORY_SEPARATOR.'RefreshTokenRepository.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Grant'.\DIRECTORY_SEPARATOR.'AbstractAuthorizeGrant.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Grant'.\DIRECTORY_SEPARATOR.'AuthCodeGrant.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repositories'.\DIRECTORY_SEPARATOR.'AuthCodeRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Repository'.\DIRECTORY_SEPARATOR.'AuthCodeRepository.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'AuthorizationServer'.\DIRECTORY_SEPARATOR.'GrantConfigurator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Converter'.\DIRECTORY_SEPARATOR.'ScopeConverterInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-server-bundle'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Converter'.\DIRECTORY_SEPARATOR.'ScopeConverter.php';

        $a = ($container->privates['league.oauth2_server.manager.doctrine.client'] ?? $container->load('getLeague_Oauth2Server_Manager_Doctrine_ClientService'));
        $b = new \League\Bundle\OAuth2ServerBundle\Manager\InMemory\ScopeManager(NULL);
        $b->save(new \League\Bundle\OAuth2ServerBundle\ValueObject\Scope('read'));
        $b->save(new \League\Bundle\OAuth2ServerBundle\ValueObject\Scope('write'));
        $c = ($container->privates['league.oauth2_server.converter.scope'] ??= new \League\Bundle\OAuth2ServerBundle\Converter\ScopeConverter());
        $d = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        $container->privates['league.oauth2_server.authorization_server'] = $instance = new \League\OAuth2\Server\AuthorizationServer(new \League\Bundle\OAuth2ServerBundle\Repository\ClientRepository($a), ($container->privates['league.oauth2_server.repository.access_token'] ?? $container->load('getLeague_Oauth2Server_Repository_AccessTokenService')), new \League\Bundle\OAuth2ServerBundle\Repository\ScopeRepository($b, $a, $c, $d), new \League\OAuth2\Server\CryptKey($container->getEnv('ECCUBE_OAUTH2_AUTHORIZATION_SERVER_PRIVATE_KEY'), NULL, false), $container->getEnv('ECCUBE_OAUTH2_ENCRYPTION_KEY'));

        $e = new \League\Event\Emitter();
        $e->useListenerProvider(new \League\Bundle\OAuth2ServerBundle\Service\SymfonyLeagueEventListenerProvider($d));
        $f = new \League\Bundle\OAuth2ServerBundle\Repository\RefreshTokenRepository(($container->privates['league.oauth2_server.manager.doctrine.refresh_token'] ?? $container->load('getLeague_Oauth2Server_Manager_Doctrine_RefreshTokenService')), ($container->privates['league.oauth2_server.manager.doctrine.access_token'] ?? $container->load('getLeague_Oauth2Server_Manager_Doctrine_AccessTokenService')));

        $g = new \League\OAuth2\Server\Grant\RefreshTokenGrant($f);
        $g->setRefreshTokenTTL(new \DateInterval('P1M'));
        $h = new \League\OAuth2\Server\Grant\AuthCodeGrant(new \League\Bundle\OAuth2ServerBundle\Repository\AuthCodeRepository(($container->privates['league.oauth2_server.manager.doctrine.authorization_code'] ?? $container->load('getLeague_Oauth2Server_Manager_Doctrine_AuthorizationCodeService')), $a, $c), $f, new \DateInterval('PT10M'));
        $h->setRefreshTokenTTL(new \DateInterval('P1M'));

        $instance->setEmitter($e);
        $instance->enableGrantType($g, new \DateInterval('PT1H'));
        $instance->enableGrantType($h, new \DateInterval('PT1H'));
        (new \League\Bundle\OAuth2ServerBundle\AuthorizationServer\GrantConfigurator(new RewindableGenerator(fn () => new \EmptyIterator(), 0)))->__invoke($instance);

        return $instance;
    }
}
