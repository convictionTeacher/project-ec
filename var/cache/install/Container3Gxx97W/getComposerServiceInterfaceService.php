<?php

namespace Container3Gxx97W;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getComposerServiceInterfaceService extends Eccube_KernelInstallContainer
{
    /*
     * Gets the private 'Eccube\Service\Composer\ComposerServiceInterface' shared autowired service.
     *
     * @return \Eccube\Service\Composer\ComposerServiceInterface
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'Composer'.\DIRECTORY_SEPARATOR.'ComposerServiceInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Eccube'.\DIRECTORY_SEPARATOR.'Service'.\DIRECTORY_SEPARATOR.'Composer'.\DIRECTORY_SEPARATOR.'ComposerServiceFactory.php';

        return $container->privates['Eccube\\Service\\Composer\\ComposerServiceInterface'] = \Eccube\Service\Composer\ComposerServiceFactory::createService(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'Eccube\\Service\\Composer\\ComposerApiService' => ['services', 'Eccube\\Service\\Composer\\ComposerApiService', 'getComposerApiServiceService', true],
        ], [
            'Eccube\\Service\\Composer\\ComposerApiService' => '?',
        ]));
    }
}
